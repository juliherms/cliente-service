version: '3.8'

services:
  # Banco de dados MySQL
  mysql:
    image: mysql:8.0
    container_name: cliente-api-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: cliente_db
      MYSQL_USER: cliente_user
      MYSQL_PASSWORD: cliente_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - cliente-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 40s

  # Aplicação Spring Boot
  cliente-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cliente-api-app
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DB_USERNAME: cliente_user
      DB_PASSWORD: cliente_pass
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/cliente_db?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
      SPRING_FLYWAY_URL: jdbc:mysql://mysql:3306/cliente_db?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
      SPRING_FLYWAY_USER: cliente_user
      SPRING_FLYWAY_PASSWORD: cliente_pass
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - cliente-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/clientes/health"]
      timeout: 10s
      retries: 5
      interval: 30s
      start_period: 60s

  # Adminer para administração do banco (opcional)
  adminer:
    image: adminer:4.8.1
    container_name: cliente-api-adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    depends_on:
      - mysql
    networks:
      - cliente-network

volumes:
  mysql_data:
    driver: local

networks:
  cliente-network:
    driver: bridge

